import React, { useRef, useEffect, useState } from 'react';
import {
  View,
  Text,
  Image,
  ScrollView,
  StyleSheet,
  TouchableOpacity,
  FlatList,
  Dimensions,
} from 'react-native';
import Icon from 'react-native-vector-icons/Ionicons';
import { useNavigation } from '@react-navigation/native'; // üëà th√™m d√≤ng n√†y

const { width } = Dimensions.get('window');

const featuredProducts = [
  {
    id: '1',
    name: 'B·ªô t·ªß b·∫øp g·ªó sang tr·ªçng',
    price: '3.850.000ƒë',
    image: require('../assets/botubepgo.jpg'),
  },
  {
    id: '2',
    name: 'B·ªô b√†n ƒÉn v·ªõi gh·∫ø da',
    price: '8.300.000ƒë',
    image: require('../assets/bobanan.jpg'),
  },
  {
    id: '3',
    name: 'B√†n ph·∫•n th√¥ng minh',
    price: '8.500.000ƒë',
    image: require('../assets/banphanthongminh.jpg'),
  },
];

const banners = [
  { image: require('../assets/slider.png') },
  { image: require('../assets/slider1.png') },
  { image: require('../assets/slider2.jpg') },
];

const interiorDesigns = [
  {
    id: '1',
    name: 'Thi·∫øt K·∫ø N·ªôi Th·∫•t Chung C∆∞ 2 Ph√≤ng Ng·ªß V·ªõi T√¥ng M√†u Tr·∫Øng V√† G·ªó V√°n √âp',
    image: require('../assets/noithatgo.jpg'),
    detail: 'Thi·∫øt k·∫ø hi·ªán ƒë·∫°i v·ªõi gam m√†u tr·∫Øng ch·ªß ƒë·∫°o k·∫øt h·ª£p ch·∫•t li·ªáu g·ªó v√°n √©p, t·∫°o n√™n kh√¥ng gian ·∫•m c√∫ng v√† sang tr·ªçng cho cƒÉn h·ªô 2 ph√≤ng ng·ªß.',
  },
  {
    id: '2',
    name: 'Thi·∫øt K·∫ø N·ªôi Th·∫•t 2 Ph√≤ng Ng·ªß Hi·ªán ƒê·∫°i',
    image: require('../assets/noithat2phongngu.jpg'),
    detail: 'Kh√¥ng gian n·ªôi th·∫•t ƒë∆∞·ª£c t·ªëi ∆∞u v·ªõi hai ph√≤ng ng·ªß ti·ªán nghi, s·ª≠ d·ª•ng √°nh s√°ng t·ª± nhi√™n k·∫øt h·ª£p n·ªôi th·∫•t ƒë∆°n gi·∫£n nh∆∞ng tinh t·∫ø.',
  },
  {
    id: '3',
    name: 'Thi·∫øt K·∫ø Ph√≤ng Kh√°ch V√† B·∫øp V·ªõi T√¥ng M√†u N√¢u ƒê·∫•t Sang Tr·ªçng',
    image: require('../assets/thietkechungcu.jpg'),
    detail: 'T√¥ng m√†u n√¢u ƒë·∫•t ch·ªß ƒë·∫°o mang l·∫°i c·∫£m gi√°c sang tr·ªçng v√† ·∫•m √°p cho kh√¥ng gian ph√≤ng kh√°ch v√† nh√† b·∫øp.',
  },
  {
    id: '4',
    name: 'Thi·∫øt K·∫ø N·ªôi Th·∫•t Nh√† B·∫øp Hi·ªán ƒê·∫°i',
    image: require('../assets/noithatnhabep.jpg'),
    detail: 'Thi·∫øt k·∫ø nh√† b·∫øp hi·ªán ƒë·∫°i v·ªõi thi·∫øt b·ªã th√¥ng minh, b·ªë tr√≠ khoa h·ªçc v√† s·ª≠ d·ª•ng m√†u s·∫Øc trung t√≠nh t·∫°o c·∫£m gi√°c s·∫°ch s·∫Ω, ti·ªán nghi.',
  },
];


const modelHouses = [
  {
    id: '1',
    name: 'Nh√† M√†u Tr·∫Øng - H·ªìng Nh·∫π',
    image: require('../assets/nhamau1.jpg'),
    detail: 'Thi·∫øt k·∫ø h√†i h√≤a gi·ªØa s·∫Øc tr·∫Øng v√† h·ªìng nh·∫π mang ƒë·∫øn kh√¥ng gian s·ªëng n·ªØ t√≠nh, t∆∞∆°i s√°ng v√† thanh l·ªãch.',
  },
  {
    id: '2',
    name: 'M·∫´u Nh√† 1 Tr·ªát 1 L·∫ßu',
    image: require('../assets/nhamau2.jpg'),
    detail: 'Thi·∫øt k·∫ø nh√† 1 tr·ªát 1 l·∫ßu hi·ªán ƒë·∫°i, t·∫≠n d·ª•ng t·ªëi ƒëa di·ªán t√≠ch v·ªõi b·ªë tr√≠ th√¥ng minh v√† t·ªëi ∆∞u c√¥ng nƒÉng s·ª≠ d·ª•ng.',
  },
  {
    id: '3',
    name: 'Thi·∫øt K·∫ø Chung C∆∞ Ph√≤ng Kh√°ch V√† Nh√† B·∫øp V·ªõi T√¥ng M√†u N√¢u ƒê·∫•t Sang Tr·ªçng',
    image: require('../assets/noithat2phongngu.jpg'),
    detail: 'Thi·∫øt k·∫ø m·ªü gi·ªØa ph√≤ng kh√°ch v√† nh√† b·∫øp, t√¥ng m√†u n√¢u ƒë·∫•t t·∫°o c·∫£m gi√°c sang tr·ªçng v√† ·∫•m √°p cho gia ch·ªß.'
  },
  {
    id: '4',
    name: 'N·ªôi th·∫•t nh√† b·∫øp',
    image: require('../assets/noithatnhabep.jpg'),
    detail: 'Nh√† b·∫øp hi·ªán ƒë·∫°i v·ªõi thi·∫øt k·∫ø tinh t·∫ø, t·ªß b·∫øp th√¥ng minh v√† b·ªë c·ª•c h·ª£p l√Ω, t·ªëi ∆∞u ho√° kh√¥ng gian n·∫•u n∆∞·ªõng.'
  },
];


const HomeScreen = () => {
  const [bannerIndex, setBannerIndex] = useState(0);
  const [activeTab, setActiveTab] = useState('interior');
  const flatListRef = useRef();
  const bannerIndexRef = useRef(0);
  const navigation = useNavigation(); // üëà hook navigation

  useEffect(() => {
    const interval = setInterval(() => {
      const nextIndex = (bannerIndexRef.current + 1) % banners.length;
      bannerIndexRef.current = nextIndex;
      setBannerIndex(nextIndex);
      flatListRef.current?.scrollToIndex({ index: nextIndex, animated: true });
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  const handlePrev = () => {
    const prevIndex = bannerIndex === 0 ? banners.length - 1 : bannerIndex - 1;
    bannerIndexRef.current = prevIndex;
    setBannerIndex(prevIndex);
    flatListRef.current?.scrollToIndex({ index: prevIndex, animated: true });
  };

  const handleNext = () => {
    const nextIndex = (bannerIndex + 1) % banners.length;
    bannerIndexRef.current = nextIndex;
    setBannerIndex(nextIndex);
    flatListRef.current?.scrollToIndex({ index: nextIndex, animated: true });
  };

  const renderDesignItems = (data) => (
  <View style={styles.designList}>
    {data.map((item) => (
      <TouchableOpacity
        key={item.id}
        style={styles.designItem}
        onPress={() => navigation.navigate('InteriorDetail', {
          name: item.name,
          image: item.image,
          detail: item.detail,
        })}
      >
        <Image source={item.image} style={styles.designImage} />
        <Text style={styles.designTitle}>{item.name}</Text>
      </TouchableOpacity>
    ))}
  </View>
);

  return (
    <ScrollView style={styles.container}>
      <View style={styles.bannerContainer}>
        <FlatList
          data={banners}
          ref={flatListRef}
          horizontal
          pagingEnabled
          showsHorizontalScrollIndicator={false}
          keyExtractor={(_, index) => index.toString()}
          renderItem={({ item }) => (
            <View style={styles.banner}>
              <Image source={item.image} style={styles.bannerImage} />
              <View style={styles.bannerOverlay} />
            </View>
          )}
        />
        <TouchableOpacity style={[styles.navButton, { left: 10 }]} onPress={handlePrev}>
          <Icon name="chevron-back" size={28} color="#fff" />
        </TouchableOpacity>
        <TouchableOpacity style={[styles.navButton, { right: 10 }]} onPress={handleNext}>
          <Icon name="chevron-forward" size={28} color="#fff" />
        </TouchableOpacity>
      </View>

      <View style={styles.section}>
        <Text style={styles.centeredHeader}>THI·∫æT K·∫æ N·ªòI TH·∫§T CHICHI</Text>
        <View style={styles.tabContainer}>
          <TouchableOpacity
            style={[styles.tabButton, activeTab === 'interior' && styles.tabButtonActive]}
            onPress={() => setActiveTab('interior')}>
            <Text style={styles.tabButtonText}>THI·∫æT K·∫æ N·ªòI TH·∫§T</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={[styles.tabButton, activeTab === 'model' && styles.tabButtonActive]}
            onPress={() => setActiveTab('model')}>
            <Text style={styles.tabButtonText}>NH√Ä M·∫™U</Text>
          </TouchableOpacity>
        </View>
        {renderDesignItems(activeTab === 'interior' ? interiorDesigns : modelHouses)}
      </View>

       <View style={styles.section}>
  <Text style={styles.centeredHeader}>S·∫¢N PH·∫®M N·ªîI B·∫¨T</Text>
  <FlatList
    data={featuredProducts}
    horizontal
    showsHorizontalScrollIndicator={false}
    renderItem={({ item }) => (
      <TouchableOpacity
        onPress={() =>
          navigation.navigate('ProductDetail', {
            name: item.name,
            image: item.image,
            price: item.price,
            description: 'ƒê√¢y l√† m√¥ t·∫£ chi ti·∫øt s·∫£n ph·∫©m. Ch·∫•t li·ªáu t·ªët, ƒë·ªô b·ªÅn cao, thi·∫øt k·∫ø hi·ªán ƒë·∫°i ph√π h·ª£p m·ªçi kh√¥ng gian.'
          })
        }
      >
        <View style={styles.productCard}>
          <Image source={item.image} style={styles.productImage} />
          <Text style={styles.productName}>{item.name}</Text>
          <Text style={styles.productPrice}>{item.price}</Text>

          <TouchableOpacity
            style={styles.productButton}
            onPress={() =>
              navigation.navigate('ProductDetail', {
                name: item.name,
                image: item.image,
                price: item.price,
                description: 'ƒê√¢y l√† m√¥ t·∫£ chi ti·∫øt s·∫£n ph·∫©m. Ch·∫•t li·ªáu t·ªët, ƒë·ªô b·ªÅn cao, thi·∫øt k·∫ø hi·ªán ƒë·∫°i ph√π h·ª£p m·ªçi kh√¥ng gian.',
              })
            }
          >
            <Text style={styles.productButtonText}>Xem chi ti·∫øt</Text>
          </TouchableOpacity>
        </View>
      </TouchableOpacity>
    )}
    keyExtractor={(item) => item.id}
  />
</View>


      <View style={styles.footer}>
        <View style={styles.footerContainer}>
          <View style={styles.footerLeft}>
            <Text style={styles.footerTitle}>THI·∫æT K·∫æ N·ªòI TH·∫§T CHICHI</Text>
            <Text style={styles.footerSubText}>
              Chichi Decor v√¥i thi·ªáu ƒë·∫øn b·∫°n nh·ªØng kh√¥ng gian s·ªëng ti·ªán nghi, hi·ªán ƒë·∫°i, t·ªëi ∆∞u h√≥a c√¥ng nƒÉng s·ª≠ d·ª•ng. ƒê·∫øn v·ªõi Chichi b·∫°n s·∫Ω ƒë∆∞·ª£c tr·∫£i nghi·ªám kh√¥ng gian s·ªëng ti·ªán nghi, hi·ªán ƒë·∫°i, t·ªëi ∆∞u h√≥a c√¥ng nƒÉng s·ª≠ d·ª•ng, ph√π h·ª£p v·ªõi nhu c·∫ßu v√† gu th·∫©m m·ªπ c·ªßa b·∫°n.
            </Text>
          </View>
          <View style={styles.footerRight}>
            <View style={styles.footerServices}>
              <Text style={styles.footerTitle}>D·ªäCH V·ª§</Text>
              <View style={styles.serviceList}>
                <Text style={styles.serviceItem}>Thi·∫øt k·∫ø n·ªôi th·∫•t cƒÉn h·ªô</Text>
                <Text style={styles.serviceItem}>Thi·∫øt k·∫ø n·ªôi th·∫•t bi·ªát th·ª±</Text>
                <Text style={styles.serviceItem}>Thi·∫øt k·∫ø n·ªôi th·∫•t nh√† ph·ªë</Text>
              </View>
            </View>
            <View style={styles.footerIcons}>
              <TouchableOpacity>
                <Icon name="logo-facebook" size={24} color="#fff" />
              </TouchableOpacity>
              <TouchableOpacity>
                <Icon name="logo-youtube" size={24} color="#fff" />
              </TouchableOpacity>
              <TouchableOpacity>
                <Icon name="logo-instagram" size={24} color="#fff" />
              </TouchableOpacity>
              <TouchableOpacity>
                <Icon name="logo-twitter" size={24} color="#fff" />
              </TouchableOpacity>
            </View>
          </View>
        </View>
      </View>
    </ScrollView>
  );
};

export default HomeScreen;

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#fff' },

  bannerContainer: { height: 200, marginBottom: 16, position: 'relative' },
  banner: { width: width, height: 200 },
  bannerImage: { width: '100%', height: '100%', borderRadius: 8 },
  bannerOverlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    justifyContent: 'flex-end',
    alignItems: 'center',
    paddingBottom: 10,
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
  },
  navButton: {
    position: 'absolute',
    top: '50%',
    transform: [{ translateY: -14 }],
    backgroundColor: 'rgba(0,0,0,0.4)',
    padding: 6,
    borderRadius: 20,
    zIndex: 10,
  },

  section: { paddingHorizontal: 16, marginBottom: 5 },

  tabContainer: {
    flexDirection: 'row',
    backgroundColor: '#eee',
    borderRadius: 20,
    marginBottom: 16,
    overflow: 'hidden',
  },
  tabButton: {
    flex: 1,
    paddingVertical: 10,
    alignItems: 'center',
  },
  tabButtonActive: {
    backgroundColor: '#ccc',
  },
  tabButtonText: {
    fontWeight: 'bold',
  },

  designList: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  designItem: {
    width: (width - 48) / 2,
    backgroundColor: '#f9f9f9',
    borderRadius: 10,
    marginBottom: 12,
    overflow: 'hidden',
  },
  designImage: {
    width: '100%',
    height: 100,
  },
  designTitle: {
    fontSize: 13,
    fontWeight: '600',
    padding: 8,
    textAlign: 'center',
    textAlignVertical: 'center',
  },

  productCard: {
    width: 160,
    marginRight: 12,
    backgroundColor: '#f8f8f8',
    borderRadius: 10,
    padding: 10,
    justifyContent: 'space-between',
    height: 240,
  },
  productImage: { width: '100%', height: 100, borderRadius: 8 },
  productName: {
    fontWeight: '600',
    marginTop: 8,
    height: 40,
  },
  productPrice: {
    color: '#000',
    marginTop: 4,
  },
  productButton: {
    backgroundColor: '#000',
    paddingVertical: 6,
    borderRadius: 6,
    marginTop: 8,
  },
  productButtonText: {
    color: '#fff',
    textAlign: 'center',
    fontSize: 13,
  },

  centeredHeader: {
    textAlign: 'center',
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 12,
  },

  footer: {
    padding: 16,
    backgroundColor: '#000',
  },
  footerContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  footerLeft: {
    flex: 1,
    paddingRight: 16,
  },
  footerRight: {
    flex: 1,
    alignItems: 'flex-end',
  },
  footerTitle: {
    color: '#fff',
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 8,
  },
  footerSubText: {
    color: '#fff',
    fontSize: 14,
    marginBottom: 8,
    textAlign: 'justify',
  },
  footerServices: {
    marginBottom: 8,
  },
  serviceList: {
    alignItems: 'flex-start',
  },
  serviceItem: {
    color: '#fff',
    fontSize: 14,
  },
  footerIcons: {
    flexDirection: 'row',
    justifyContent: 'center',
    width: '100%',
    gap: 16,
  },
});